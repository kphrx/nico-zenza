# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: lts/*
          cache: npm
      - run: npm ci
      - run: npm run compile

  lint:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: lts/*
          cache: npm
      - run: npm ci
      - run: npm run lint

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: lts/*
          cache: npm
      - run: npm ci
      - run: npm test

  pack:
    runs-on: ubuntu-latest
    outputs:
      artifacts: ${{ steps.build.outputs.artifacts }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: lts/*
          cache: npm
      - run: npm ci
      - name: Build
        id: build
        run: |
          {
            echo 'artifacts<<EOF'
            npm --silent run build:dev
            echo EOF
          } >> "$GITHUB_OUTPUT"
      - name: Copy UserSripts
        uses: actions/github-script@v7
        env:
          ARTIFACTS: ${{ steps.build.outputs.artifacts }}
        with:
          script: |
            const {cp, mkdir} = require("node:fs/promises");
            const artifacts = JSON.parse(process.env.ARTIFACTS);
            mkdir("dist");
            for (const artifact of artifacts) {
              cp(artifact.path, `dist/${artifact.filename}`);
            }
      - uses: actions/upload-artifact@v2
        with:
          name: scripts
          path: dist/

  pages:
    needs: pack
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: scripts
          path: ${{ runner.temp }}/scripts/
      - name: Move scripts directory
        working-directory: ${{ runner.temp }}
        run: |
          mkdir ./dist
          mv ./scripts/ ./dist
          chmod -c -R +rX ./dist/ | while read -r line; do
              echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - uses: actions/upload-pages-artifact@v2
        with:
          path: ${{ runner.temp }}/dist/

  deploy:
    needs: pages
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    concurrency:
      group: pages
      cancel-in-progress: true
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/deploy-pages@v3
        id: deployment

import {html, nothing, svg} from "lit";

export const SQRT_3 = Math.sqrt(3);

const TRIANGLE_SIDE_LENGTH = 20;
const TRIANGLE_SIDE_HARF_LENGTH = TRIANGLE_SIDE_LENGTH / 2;
const TRIANGLE_HEIGHT = SQRT_3 * TRIANGLE_SIDE_HARF_LENGTH;
const PAUSE_LINE_WEIGHT = TRIANGLE_HEIGHT / 3;
export const playButton = html`<svg
  xmlns="http://www.w3.org/2000/svg"
  viewBox="0 0 ${TRIANGLE_HEIGHT} ${TRIANGLE_SIDE_LENGTH}">
  ${svg`<path fill="currentColor" d="M0,0 V${TRIANGLE_SIDE_LENGTH} L${TRIANGLE_HEIGHT},${TRIANGLE_SIDE_HARF_LENGTH} Z" />`}
</svg>`;
export const pauseButton = html`<svg
  xmlns="http://www.w3.org/2000/svg"
  viewBox="0 0 ${TRIANGLE_HEIGHT} ${TRIANGLE_SIDE_LENGTH}">
  ${[
    svg`<path fill="currentColor" d="M0,0 V${TRIANGLE_SIDE_LENGTH} H${PAUSE_LINE_WEIGHT} V0 Z" />`,
    svg`<path fill="currentColor" d="M${TRIANGLE_HEIGHT},0 V${TRIANGLE_SIDE_LENGTH} H${TRIANGLE_HEIGHT - PAUSE_LINE_WEIGHT} V0 Z" />`,
  ]}
</svg>`;

const SPEAKER_BUTTON_HEIGHT = 30;
const SPEAKER_BUTTON_HARF = SPEAKER_BUTTON_HEIGHT / 2;
const SPEAKER_LENGTH = (SPEAKER_BUTTON_HEIGHT / 5) * 2;
const SPEAKER_HEIGHT = (SPEAKER_LENGTH / SQRT_3) * 2;
const SPEAKER_HARF_HEIGHT = SPEAKER_HEIGHT / 2;
const SPEAKER_BODY_HEIGHT = 7;
const SPEAKER_BODY_HARF_HEIGHT = SPEAKER_BODY_HEIGHT / 2;
const SPEAKER_BODY_TOP_POS = SPEAKER_BUTTON_HARF - SPEAKER_BODY_HARF_HEIGHT;
const SPEAKER_BODY_BOTTOM_POS = SPEAKER_BUTTON_HARF + SPEAKER_BODY_HARF_HEIGHT;
const SPEAKER_DIFF_HEIGHT = SPEAKER_HARF_HEIGHT - SPEAKER_BODY_HARF_HEIGHT;
const SPEAKER_BODY_END_LENGTH = SPEAKER_LENGTH - SQRT_3 * SPEAKER_DIFF_HEIGHT;
const SPEAKER_WAVE_GAP = (SPEAKER_BUTTON_HARF - SPEAKER_HEIGHT) / 3;
const SPEAKER_WAVE_1 = SPEAKER_HEIGHT + SPEAKER_WAVE_GAP;
const SPEAKER_WAVE_2 =
  SPEAKER_HEIGHT + SPEAKER_WAVE_GAP * 2 + SPEAKER_BODY_HARF_HEIGHT;
const SPEAKER_WAVE_3 =
  SPEAKER_HEIGHT + SPEAKER_WAVE_GAP * 3 + SPEAKER_BODY_HARF_HEIGHT * 2;
const SPEAKER_WAVE_TOP_1 = SPEAKER_BODY_TOP_POS;
const SPEAKER_WAVE_TOP_2 = SPEAKER_BODY_TOP_POS - SPEAKER_BODY_HARF_HEIGHT;
const SPEAKER_WAVE_TOP_3 = SPEAKER_BODY_TOP_POS - SPEAKER_BODY_HARF_HEIGHT * 2;
const SPEAKER_WAVE_BOTTOM_1 = SPEAKER_BODY_BOTTOM_POS;
const SPEAKER_WAVE_BOTTOM_2 =
  SPEAKER_BODY_BOTTOM_POS + SPEAKER_BODY_HARF_HEIGHT;
const SPEAKER_WAVE_BOTTOM_3 =
  SPEAKER_BODY_BOTTOM_POS + SPEAKER_BODY_HARF_HEIGHT * 2;
const SPEAKER_WAVE_HEIGHT_1 =
  SPEAKER_WAVE_1 + (SQRT_3 * SPEAKER_BODY_HARF_HEIGHT) / 2;
const SPEAKER_WAVE_HEIGHT_2 =
  SPEAKER_WAVE_2 + (SQRT_3 * SPEAKER_BODY_HARF_HEIGHT * 2) / 2;
const SPEAKER_WAVE_HEIGHT_3 =
  SPEAKER_WAVE_3 + (SQRT_3 * SPEAKER_BODY_HARF_HEIGHT * 3) / 2;
const SPEAKER_BUTTON_WIDTH =
  SPEAKER_WAVE_HEIGHT_3 - (SPEAKER_WAVE_HEIGHT_3 - SPEAKER_WAVE_3) / 2 + 2;
export const SPEAKER_BUTTON_ASPECT =
  SPEAKER_BUTTON_WIDTH / SPEAKER_BUTTON_HEIGHT;

export const speakerButton = (level: 0 | 1 | 2 | 3, isMuted: boolean) =>
  html`<svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 ${SPEAKER_BUTTON_WIDTH} ${SPEAKER_BUTTON_HEIGHT}">
    ${[
      svg`<path fill="currentColor" d="M0,${SPEAKER_BODY_TOP_POS} H${SPEAKER_BODY_END_LENGTH} L${SPEAKER_LENGTH},${SPEAKER_BUTTON_HARF - SPEAKER_HARF_HEIGHT} V${SPEAKER_BUTTON_HARF + SPEAKER_HARF_HEIGHT} L${SPEAKER_BODY_END_LENGTH},${SPEAKER_BODY_BOTTOM_POS} H0 Z" />`,
      isMuted || level > 0
        ? svg`<path fill="transparent" stroke="currentColor" stroke-width=2 d="M${SPEAKER_WAVE_1},${SPEAKER_WAVE_TOP_1} Q${SPEAKER_WAVE_HEIGHT_1},${SPEAKER_BUTTON_HARF} ${SPEAKER_WAVE_1},${SPEAKER_WAVE_BOTTOM_1}" />`
        : nothing,
      isMuted || level > 1
        ? svg`<path fill="transparent" stroke="currentColor" stroke-width=2 d="M${SPEAKER_WAVE_2},${SPEAKER_WAVE_TOP_2} Q${SPEAKER_WAVE_HEIGHT_2},${SPEAKER_BUTTON_HARF} ${SPEAKER_WAVE_2},${SPEAKER_WAVE_BOTTOM_2}" />`
        : nothing,
      isMuted || level > 2
        ? svg`<path fill="transparent" stroke="currentColor" stroke-width=2 d="M${SPEAKER_WAVE_3},${SPEAKER_WAVE_TOP_3} Q${SPEAKER_WAVE_HEIGHT_3},${SPEAKER_BUTTON_HARF} ${SPEAKER_WAVE_3},${SPEAKER_WAVE_BOTTOM_3}" />`
        : nothing,
      isMuted
        ? svg`<path fill="transparent" stroke="currentColor" stroke-width=2 d="M1,${SPEAKER_BUTTON_HEIGHT - SPEAKER_BUTTON_WIDTH + 1} L${SPEAKER_BUTTON_WIDTH - 1},${SPEAKER_BUTTON_WIDTH - 1}" />`
        : nothing,
    ]}
  </svg>`;
